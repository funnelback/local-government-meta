{"version":3,"file":"js/113-d53e97d778ceed6b628c.js","mappings":"0OAwCe,SAASA,EAAQC,GAC5B,MAAM,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,EAApC,YAA+CC,GAAgBN,GAC/D,QAAEO,EAAF,cAAWC,EAAX,MAA0BC,IAAUC,EAAAA,EAAAA,KAE1C,OAAKH,EAAQH,IAA8C,IAA/BG,EAAQH,GAAYO,OAK5C,uBACIV,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWS,KAAK,KAC/DC,KAAK,YAEL,sBAAIV,UAAU,yCAAyCD,GACtDK,EAAQH,IACLG,EAAQH,GAAYU,KAAI,CAACC,EAAMC,IAnD/C,YAOG,IAPc,MACbA,EADa,KAEbD,EAFa,MAGbN,EAHa,cAIbD,EAJa,YAKbF,EALa,UAMbD,GACD,EACC,MAAMY,EAAQ,IAAIC,OAAJ,WAAeT,EAAf,KAAyB,MAGjCU,EAAOJ,EAAKK,QAAQH,EAFR,qCAIlB,OACI,uBACII,IAAKhB,EACLQ,KAAK,MACL,uBAAeE,GACfd,GAAE,UAAKe,GACPM,IAAG,kBAAaN,GAChB,gBAAeR,IAAkBQ,EACjCb,UAAU,qDACVoB,QAAUC,GAAMlB,EAAYkB,EAAGT,GAC/BU,UAAYD,GAAMlB,EAAYkB,EAAGT,GACjCW,UAAW,GAEX,uBACIb,KAAK,WACL,4BAAoBG,GACpBW,wBAAyB,CAAEC,OAAQT,MAuB/BU,CAAQ,CACJb,MAAAA,EACAD,KAAAA,EACAN,MAAAA,EACAD,cAAAA,EACAF,YAAAA,EACAD,UAAAA,OAlBT,KAyBf,MAAM,OAAEyB,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjClC,EAAQmC,UAAY,CAChBjC,GAAI6B,EAAOK,WACXjC,MAAO4B,EACP3B,UAAW2B,EACX1B,WAAY2B,EAAOI,WACnB9B,UAAW2B,EAAKG,WAChB7B,YAAa0B,GAGjBjC,EAAQqC,aAAe,CACnBlC,MAAO,GACPC,UAAW,GACXG,YAAa","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/organic.jsx"],"sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\nfunction partial({\n    index,\n    data,\n    query,\n    selectedIndex,\n    handleClick,\n    childRefs,\n}) {\n    const regex = new RegExp(`(${query})`, 'gi');\n    const highlight = '<span class=\"highlight\">$1</span>';\n\n    const item = data.replace(regex, highlight);\n\n    return (\n        <div\n            ref={childRefs}\n            role=\"row\"\n            aria-label={`${data}`}\n            id={`${index}`}\n            key={`organic-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item organic\"\n            onClick={(e) => handleClick(e, data)}\n            onKeyDown={(e) => handleClick(e, data)}\n            tabIndex={-1}\n        >\n            <div\n                role=\"gridcell\"\n                aria-labelledby={`${index}`}\n                dangerouslySetInnerHTML={{ __html: item }}\n            />\n        </div>\n    );\n}\n\nexport default function Organic(props) {\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n    const { results, selectedIndex, query } = useStore();\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"rowgroup\"\n        >\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        index,\n                        data,\n                        query,\n                        selectedIndex,\n                        handleClick,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nOrganic.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n    handleClick: func,\n};\n\nOrganic.defaultProps = {\n    label: ``,\n    className: ``,\n    handleClick: () => {},\n};\n"],"names":["Organic","props","id","label","className","templateId","childRefs","handleClick","results","selectedIndex","query","useStore","length","join","role","map","data","index","regex","RegExp","item","replace","ref","key","onClick","e","onKeyDown","tabIndex","dangerouslySetInnerHTML","__html","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}