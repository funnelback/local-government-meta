{"version":3,"file":"js/723-21ba02a15d3c6fec3d55.js","mappings":"iOA2Ce,SAASA,EAASC,GAC7B,MAAM,QAAEC,EAAF,cAAWC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,GAAcR,EAElDS,EAAc,CAACC,EAAGC,KACpBD,EAAEE,iBACFC,SAASC,SAASC,KAAOJ,GAG7B,OAAKV,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYS,OAK5C,uBACIZ,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWW,KAAK,KAC/DC,KAAK,YAEL,sBAAIZ,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYY,KAAI,CAACC,EAAMC,IA5D/C,SAAiBrB,GACb,MAAM,KAAEoB,EAAF,MAAQC,EAAR,YAAeZ,EAAf,cAA4BP,EAA5B,UAA2CM,GAAcR,GACzD,OAAEW,EAAF,KAAUW,GAASF,EAEzB,OACI,uBACIhB,GAAE,UAAKiB,GACPH,KAAK,MACLK,IAAKf,EACLgB,IAAG,0BAAqBH,GACxB,gBAAenB,IAAkBmB,EACjCf,UAAU,6CACVmB,QAAUf,GAAMD,EAAYC,EAAGC,GAC/Be,UAAYhB,GAAMD,EAAYC,EAAGU,GACjCO,UAAW,GAEX,sBAAIrB,UAAU,SACTgB,EAAKM,MACLN,EAAKO,aAAaC,uBAAlB,YACQR,EAAKO,aAAaC,sBAD1B,MAIL,uBAAKxB,UAAU,UAAUY,KAAK,YACzBI,EAAKO,aAAaE,gBACf,uBAAKzB,UAAU,kCACVgB,EAAKO,aAAaE,gBAI1BT,EAAKO,aAAaG,wBACf,uBAAK1B,UAAU,kCACVgB,EAAKO,aAAaG,0BA8BvBC,CAAQ,CACJb,KAAAA,EACAC,MAAAA,EACAZ,YAAAA,EACAP,cAAAA,EACAM,UAAAA,OAjBT,KAwBf,MAAM,OAAE0B,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjCtC,EAASuC,UAAY,CACjBlC,GAAI8B,EAAOK,WACXlC,MAAO6B,EACP5B,UAAW4B,EACX3B,WAAY4B,EAAOI,WACnB/B,UAAW4B,EAAKG,YAGpBxC,EAASyC,aAAe,CACpBnC,MAAO,GACPC,UAAW","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/programs--v16.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const { action, disp } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, action)}\n            onKeyDown={(e) => handleClick(e, data)}\n            tabIndex={-1}\n        >\n            <h3 className=\"title\">\n                {disp.title}\n                {disp.listMetadata.programCredentialType &&\n                    ` (${disp.listMetadata.programCredentialType})`}\n            </h3>\n\n            <div className=\"details\" role=\"gridcell\">\n                {disp.listMetadata.programFaculty && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.listMetadata.programFaculty}\n                    </div>\n                )}\n\n                {disp.listMetadata.stencilsDeliveryMethod && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.listMetadata.stencilsDeliveryMethod}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default function Programs(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs } = props;\n\n    const handleClick = (e, action) => {\n        e.preventDefault();\n        document.location.href = action;\n    };\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"rowgroup\"\n        >\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nPrograms.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nPrograms.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Programs","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","handleClick","e","action","preventDefault","document","location","href","length","join","role","map","data","index","disp","ref","key","onClick","onKeyDown","tabIndex","title","listMetadata","programCredentialType","programFaculty","stencilsDeliveryMethod","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}