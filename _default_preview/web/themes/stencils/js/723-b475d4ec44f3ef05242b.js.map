{"version":3,"file":"js/723-b475d4ec44f3ef05242b.js","mappings":"iOA2Ce,SAASA,EAASC,GAC7B,MAAM,QAAEC,EAAF,cAAWC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,EAApC,aAA+CC,GAAiBT,EAEhEU,EAAc,CAACC,EAAGC,EAAQC,KAC5BF,EAAEG,iBAEFL,EAAaG,EAAQC,GAAO,IAAOE,SAASC,SAASC,KAAOL,KAGhE,OAAKX,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYW,OAK5C,uBACId,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWa,KAAK,KAC/DC,KAAK,YAEL,sBAAId,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYc,KAAI,CAACC,EAAMC,IA7D/C,SAAiBvB,GACb,MAAM,KAAEsB,EAAF,MAAQC,EAAR,YAAeb,EAAf,cAA4BR,EAA5B,UAA2CM,GAAcR,GACzD,OAAEY,EAAF,KAAUY,GAASF,EAEzB,OACI,uBACIlB,GAAE,UAAKmB,GACPH,KAAK,MACLK,IAAKjB,EACLkB,IAAG,0BAAqBH,GACxB,gBAAerB,IAAkBqB,EACjCjB,UAAU,6CACVqB,QAAUhB,GAAMD,EAAYC,EAAGC,EAAQY,EAAKX,OAC5Ce,UAAYjB,GAAMD,EAAYC,EAAGC,EAAQY,EAAKX,OAC9CgB,UAAW,GAEX,qBAAGhB,MAAOW,EAAKX,MAAOP,UAAU,QAAQW,KAAML,GACzCY,EAAKX,MACLW,EAAKM,aAAaC,uBAAlB,YACQP,EAAKM,aAAaC,sBAD1B,MAIL,uBAAKzB,UAAU,UAAUc,KAAK,YACzBI,EAAKM,aAAaE,gBACf,uBAAK1B,UAAU,kCACVkB,EAAKM,aAAaE,gBAI1BR,EAAKM,aAAaG,wBACf,uBAAK3B,UAAU,kCACVkB,EAAKM,aAAaG,0BA+BvBC,CAAQ,CACJZ,KAAAA,EACAC,MAAAA,EACAb,YAAAA,EACAR,cAAAA,EACAM,UAAAA,OAjBT,KAwBf,MAAM,OAAE2B,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjCvC,EAASwC,UAAY,CACjBnC,GAAI+B,EAAOK,WACXnC,MAAO8B,EACP7B,UAAW6B,EACX5B,WAAY6B,EAAOI,WACnBhC,UAAW6B,EAAKG,YAGpBzC,EAAS0C,aAAe,CACpBpC,MAAO,GACPC,UAAW","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/programs--v16.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const { action, disp } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, action, disp.title)}\n            onKeyDown={(e) => handleClick(e, action, disp.title)}\n            tabIndex={-1}\n        >\n            <a title={disp.title} className=\"title\" href={action}>\n                {disp.title}\n                {disp.listMetadata.programCredentialType &&\n                    ` (${disp.listMetadata.programCredentialType})`}\n            </a>\n\n            <div className=\"details\" role=\"gridcell\">\n                {disp.listMetadata.programFaculty && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.listMetadata.programFaculty}\n                    </div>\n                )}\n\n                {disp.listMetadata.stencilsDeliveryMethod && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.listMetadata.stencilsDeliveryMethod}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default function Programs(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs, trackedClick } = props;\n\n    const handleClick = (e, action, title) => {\n        e.preventDefault();\n        // eslint-disable-next-line no-return-assign\n        trackedClick(action, title, () => (document.location.href = action));\n    };\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"rowgroup\"\n        >\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nPrograms.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nPrograms.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Programs","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","trackedClick","handleClick","e","action","title","preventDefault","document","location","href","length","join","role","map","data","index","disp","ref","key","onClick","onKeyDown","tabIndex","listMetadata","programCredentialType","programFaculty","stencilsDeliveryMethod","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}