{"version":3,"file":"js/SocialFeed-1b62cedd9e6b6ec75a38.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./node_modules/aria-hidden/dist/es2015/index.js","webpack://Plug-and-Play-Template/./node_modules/@react-aria/aria-modal-polyfill/dist/module.js","webpack://Plug-and-Play-Template/./node_modules/@react-aria/button/dist/module.js","webpack://Plug-and-Play-Template/./src/modules/_global/js/uuid.js","webpack://Plug-and-Play-Template/./src/modules/modal/jsx/modal.jsx","webpack://Plug-and-Play-Template/./src/modules/modal/jsx/useDivButtonModalOpen.jsx","webpack://Plug-and-Play-Template/./node_modules/date-fns/esm/formatISO/index.js","webpack://Plug-and-Play-Template/./src/modules/social-feed/jsx/card-types/BaseSocialCard.jsx","webpack://Plug-and-Play-Template/./src/modules/social-feed/jsx/card-types/YoutubeSocialCard.jsx","webpack://Plug-and-Play-Template/./src/modules/social-feed/jsx/card-types/SocialCardCommon.jsx","webpack://Plug-and-Play-Template/./src/modules/social-feed/jsx/socialFeed.jsx","webpack://Plug-and-Play-Template/./src/modules/social-feed/jsx/card-types/CardFactory.jsx","webpack://Plug-and-Play-Template/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js"],"sourcesContent":["var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (parentNode === void 0) { parentNode = getDefaultParent(originalTarget); }\n    if (markerName === void 0) { markerName = \"data-aria-hidden\"; }\n    var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var keep = (function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    });\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || targets.indexOf(parent) >= 0) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                var attr = node.getAttribute('aria-hidden');\n                var alreadyHidden = attr !== null && attr !== 'false';\n                var counterValue = (counterMap.get(node) || 0) + 1;\n                var markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute('aria-hidden', 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute('aria-hidden');\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n","import {hideOthers as $gSBjr$hideOthers} from \"aria-hidden\";\n\n\nconst $7aa021f48f4356fd$var$currentDocument = typeof document !== 'undefined' ? document : undefined;\nfunction $7aa021f48f4356fd$export$11dddb85aae73809(selector = 'body', { document: document = $7aa021f48f4356fd$var$currentDocument  } = {\n}) {\n    /**\n   * Listen for additions to the child list of the selected element (defaults to body). This is where providers render modal portals.\n   * When one is added, see if there is a modal inside it, if there is, then hide everything else from screen readers.\n   * If there was already a modal open and a new one was added, undo everything that the previous modal had hidden and hide based on the new one.\n   *\n   * If a modal container is removed, then undo the hiding based on the last hide others. Check if there are any other modals still around, and\n   * hide based on the last one added.\n   */ let target = document.querySelector(selector);\n    let config = {\n        childList: true\n    };\n    let modalContainers = [];\n    let undo;\n    let observer = new MutationObserver((mutationRecord)=>{\n        for (let mutation of mutationRecord){\n            if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                let addNode = Array.from(mutation.addedNodes).find((node)=>{\n                    var ref;\n                    return (ref = node.querySelector) === null || ref === void 0 ? void 0 : ref.call(node, '[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                });\n                if (addNode) {\n                    modalContainers.push(addNode);\n                    let modal = addNode.querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                    undo === null || undo === void 0 ? void 0 : undo();\n                    undo = $gSBjr$hideOthers(modal);\n                }\n            } else if (mutation.type === 'childList' && mutation.removedNodes.length > 0) {\n                let removedNodes = Array.from(mutation.removedNodes);\n                let nodeIndexRemove = modalContainers.findIndex((container)=>removedNodes.includes(container)\n                );\n                if (nodeIndexRemove >= 0) {\n                    undo();\n                    modalContainers = modalContainers.filter((val, i)=>i !== nodeIndexRemove\n                    );\n                    if (modalContainers.length > 0) {\n                        let modal = modalContainers[modalContainers.length - 1].querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                        undo = $gSBjr$hideOthers(modal);\n                    } else undo = undefined;\n                }\n            }\n        }\n    });\n    observer.observe(target, config);\n    return ()=>{\n        undo === null || undo === void 0 ? void 0 : undo();\n        observer.disconnect();\n    };\n}\n\n\nexport {$7aa021f48f4356fd$export$11dddb85aae73809 as watchModals};\n//# sourceMappingURL=module.js.map\n","import _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { filterDOMProps, mergeProps, chain } from \"@react-aria/utils\";\n\n/**\n * Provides the behavior and accessibility implementation for a button component. Handles mouse, keyboard, and touch interactions,\n * focus behavior, and ARIA props for both native button elements and custom element types.\n * @param props - Props to be applied to the button.\n * @param ref - A ref to a DOM element for the button.\n */\nexport function useButton(props, ref) {\n  let {\n    elementType = 'button',\n    isDisabled,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    // @ts-ignore - undocumented\n    preventFocusOnPress,\n    // @ts-ignore\n    onClick: deprecatedOnClick,\n    href,\n    target,\n    rel,\n    type = 'button'\n  } = props;\n  let additionalProps;\n\n  if (elementType === 'button') {\n    additionalProps = {\n      type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: 'button',\n      tabIndex: isDisabled ? undefined : 0,\n      href: elementType === 'a' && isDisabled ? undefined : href,\n      target: elementType === 'a' ? target : undefined,\n      type: elementType === 'input' ? type : undefined,\n      disabled: elementType === 'input' ? isDisabled : undefined,\n      'aria-disabled': !isDisabled || elementType === 'input' ? undefined : isDisabled,\n      rel: elementType === 'a' ? rel : undefined\n    };\n  }\n\n  let {\n    pressProps,\n    isPressed\n  } = usePress({\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onPress,\n    isDisabled,\n    preventFocusOnPress,\n    ref\n  });\n  let {\n    focusableProps\n  } = useFocusable(props, ref);\n  let buttonProps = mergeProps(focusableProps, pressProps);\n  buttonProps = mergeProps(buttonProps, filterDOMProps(props, {\n    labelable: true\n  }));\n  return {\n    isPressed,\n    // Used to indicate press state for visual\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      'aria-haspopup': props['aria-haspopup'],\n      'aria-expanded': props['aria-expanded'],\n      'aria-controls': props['aria-controls'],\n      'aria-pressed': props['aria-pressed'],\n      onClick: e => {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n      }\n    })\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for a toggle button component.\n * ToggleButtons allow users to toggle a selection on or off, for example switching between two states or modes.\n */\nexport function useToggleButton(props, state, ref) {\n  const {\n    isSelected\n  } = state;\n  const {\n    isPressed,\n    buttonProps\n  } = useButton(_babelRuntimeHelpersEsmExtends({}, props, {\n    onPress: chain(state.toggle, props.onPress)\n  }), ref);\n  return {\n    isPressed,\n    buttonProps: mergeProps(buttonProps, {\n      'aria-pressed': isSelected\n    })\n  };\n}\n//# sourceMappingURL=module.js.map\n","/* eslint-disable no-bitwise */\n/**\n * Generate a (mostly) unique ID in an RFC4122 version 4 compliant format\n * Function ported from initFormSubmissionHandler.\n *\n * @returns String\n *\n * @source https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\n */\nexport default function uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n        (\n            c ^\n            (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n        ).toString(16)\n    );\n}\n","/* eslint-disable react/jsx-props-no-spreading */ // Disabled as prop spreading is the documented way to use the @react-aria framework\nimport React, { useEffect } from 'react';\nimport {\n    useOverlay,\n    usePreventScroll,\n    useModal,\n    OverlayContainer,\n} from '@react-aria/overlays';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope, useFocusManager } from '@react-aria/focus';\n\n/**\n * React implementation of the Plug and Play Modal, uses the Adobe @react-aria package\n * to handle the modal / dialog related accessability concerns such as focus movement, focus traps,\n * ESC to close ect.\n *\n * Needs to be wrapped within a <OverlayProvider> to aria hide the application when the modal opens.\n *\n * Comments on @react-aria hooks come directly from their documentation.\n */\nexport default function Modal({\n    titleId,\n    title,\n    onClose,\n    children,\n    className,\n}) {\n    return (\n        <OverlayContainer>\n            <div\n                className={`no-wysiwyg modal-wrapper ${\n                    className ? `${className}-wrapper` : ''\n                }`}\n            >\n                <FocusScope contain restoreFocus autoFocus>\n                    <ModalContent\n                        titleId={titleId}\n                        title={title}\n                        onClose={onClose}\n                        className={className}\n                    >\n                        {children}\n                    </ModalContent>\n                </FocusScope>\n            </div>\n        </OverlayContainer>\n    );\n}\n\nfunction ModalContent({ titleId, title, onClose, children, className }) {\n    // Base settings for @react-aria hooks\n    const settings = {\n        'aria-describedby': titleId,\n        title,\n        onClose,\n        isDismissable: true,\n        isOpen: true,\n    };\n\n    const modalRef = React.useRef();\n    const modalContentRef = React.useRef();\n    const focusManager = useFocusManager();\n\n    /*\n        Provides the behavior for overlays such as dialogs, popovers, and menus. Hides the overlay when\n        the user interacts outside it, when the Escape key is pressed, or optionally, on blur.\n    */\n    const { overlayProps, underlayProps } = useOverlay(\n        settings,\n        modalContentRef\n    );\n\n    /*\n        Prevents scrolling on the document body on mount, and restores it on unmount.\n        Also ensures that content does not shift due to the scrollbars disappearing.\n    */\n    usePreventScroll();\n\n    /*\n        Hides content outside the current <OverlayContainer> from screen readers on mount and restores it on unmount.\n    */\n    const { modalProps } = useModal();\n\n    /*\n        Provides the behavior and accessibility implementation for a dialog component.\n    */\n    const { dialogProps, titleProps } = useDialog(settings, modalContentRef);\n\n    /*\n        Remove the hidden attribute as soon as its drawn to the DOM so it transitions open like\n        the base ES6 modal in the framework.\n    */\n    useEffect(() => {\n        modalRef.current.removeAttribute('hidden');\n        focusManager.focusFirst(); // FocusScope autofocus property wont work due to being hidden so focus first now\n    }, [modalRef]);\n\n    return (\n        <div\n            ref={modalRef}\n            {...underlayProps}\n            hidden\n            className={`modal ${className || ''}`}\n        >\n            <div\n                ref={modalContentRef}\n                {...overlayProps}\n                {...dialogProps}\n                {...modalProps}\n                aria-modal=\"true\"\n                tabIndex=\"-1\"\n                className={`modal__content ${\n                    className ? `${className}__content` : ''\n                }`}\n            >\n                {titleId ? (\n                    ''\n                ) : (\n                    <h2\n                        {...titleProps}\n                        className={`${className ? `${className}__title` : ''}`}\n                    >\n                        {title}\n                    </h2>\n                )}\n                {children}\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable import/prefer-default-export */\nimport { useRef, useState } from 'react';\nimport { useButton } from '@react-aria/button';\n/**\n * @returns Hooks to open and close the modal dialog from interacting with the a div rather than a button\n */\nexport default function useDivButtonModalOpen() {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const openModalRef = useRef();\n\n    let { buttonProps: modalOpenProps } = useButton(\n        {\n            onPress: () => setIsModalOpen(true),\n        },\n        openModalRef\n    );\n\n    // Add our own fields\n    modalOpenProps = {\n        ...modalOpenProps,\n        role: 'button',\n        tabIndex: '0',\n        'aria-label': 'Open in modal',\n    };\n    delete modalOpenProps.type;\n\n    return {\n        openModalRef, // useRef\n        modalOpenProps, // useKeyboard\n        isModalOpen, // useState get\n        setIsModalOpen, // useState set\n    };\n}\n","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(date, options) {\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var format = !(options !== null && options !== void 0 && options.format) ? 'extended' : String(options.format);\n  var representation = !(options !== null && options !== void 0 && options.representation) ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { useState } from 'react';\n\nimport { formatISO, formatDistance } from 'date-fns';\n\nimport uuidv4 from 'PlugAndPlay/_global/js/uuid';\nimport Modal from '../../../modal/jsx/modal';\nimport useDivModalOpen from '../../../modal/jsx/useDivButtonModalOpen';\n\nconst SOCIAL_CARD_MAX_DESCRIPTION_LENGTH = 100;\n\nexport default function BaseSocialCard(args) {\n    const {\n        accountName,\n        accountImage,\n        createdDate,\n        source,\n        text,\n        url,\n        image,\n        lazyLoadImages,\n    } = args;\n\n    const [isExpanded, setIsExpanded] = useState(false);\n    const { openModalRef, modalOpenProps, isModalOpen, setIsModalOpen } =\n        useDivModalOpen();\n\n    let isTrimmed = false;\n    let bodyText = text;\n    if (bodyText.length > SOCIAL_CARD_MAX_DESCRIPTION_LENGTH && !isExpanded) {\n        isTrimmed = true;\n        bodyText = bodyText.slice(0, SOCIAL_CARD_MAX_DESCRIPTION_LENGTH);\n    }\n\n    let icon;\n    switch (source) {\n        case 'twitter': {\n            icon = 'logo-twitter';\n            break;\n        }\n        case 'facebook': {\n            icon = 'logo-facebook';\n            break;\n        }\n\n        default:\n            icon = 'external';\n    }\n\n    return (\n        <article className=\"social-card\">\n            <div\n                {...modalOpenProps}\n                ref={openModalRef}\n                className=\"social-card__open-modal\"\n            >\n                <header className=\"social-card__header\">\n                    <div className=\"social-card__header-image\">\n                        <img\n                            alt=\"\"\n                            src={accountImage}\n                            loading={`${lazyLoadImages ? 'lazy' : ''}`}\n                            className=\"social-card__account-image\"\n                        />\n                    </div>\n                    <div className=\"social-card__title\">\n                        <time\n                            dateTime={formatISO(createdDate, {\n                                representation: 'date',\n                            })}\n                            className=\"social-card__post-created\"\n                        >\n                            {formatDistance(createdDate, new Date(), {\n                                addSuffix: true,\n                            })}\n                        </time>\n                        <div className=\"social-card__account-name\">\n                            {accountName}\n                        </div>\n                    </div>\n                </header>\n                <div className=\"social-card__body\">\n                    {bodyText}\n                    {isTrimmed && (\n                        <>\n                            <span>...</span>\n                            <button\n                                type=\"button\"\n                                className=\"social-card__show-more\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    setIsExpanded(true);\n                                }}\n                            >\n                                show more\n                            </button>\n                        </>\n                    )}\n\n                    {image && (\n                        <img\n                            alt=\"\"\n                            src={image}\n                            loading={`${lazyLoadImages ? 'lazy' : ''}`}\n                            className=\"social-card__body-image\"\n                        />\n                    )}\n                </div>\n            </div>\n            <a\n                href={url}\n                target=\"_blank\"\n                aria-label={`View at ${source} (Opens in new window)`}\n                rel=\"noopener noreferrer\"\n                onClick={(event) => event.stopPropagation()}\n                className={`social-card__view-external social-card__view-external--${icon}`}\n            >\n                <svg className=\"svg-icon\">\n                    <use href={`#${icon}`} />\n                </svg>\n            </a>\n            {isModalOpen && (\n                <BaseSocialCardModal\n                    {...args}\n                    handleModalClose={() => {\n                        setIsModalOpen(false);\n                    }}\n                />\n            )}\n        </article>\n    );\n}\n\nfunction BaseSocialCardModal({\n    accountName,\n    accountImage,\n    createdDate,\n    source,\n    text,\n    url,\n    image,\n    video,\n    videoCaptions,\n    handleModalClose,\n}) {\n    let bodyAdditionalContent;\n    if (video) {\n        bodyAdditionalContent = (\n            <div className=\"social-card-modal__video-embed-wrapper\">\n                <video src={video} className=\"social-card-modal__video-embed\">\n                    {videoCaptions && (\n                        <track kind=\"captions\" src={videoCaptions} />\n                    )}\n                </video>\n            </div>\n        );\n    } else if (image) {\n        bodyAdditionalContent = (\n            <img\n                alt=\"\"\n                loading=\"lazy\"\n                src={image}\n                className=\"social-card-modal__body-image\"\n            />\n        );\n    }\n\n    const titleId = uuidv4(); // Modal needs a id for the dialog described by\n    return (\n        <Modal\n            titleId={titleId}\n            onClose={handleModalClose}\n            className=\"social-card-modal\"\n        >\n            <header className=\"social-card-modal__header\">\n                <div className=\"social-card-modal__header-image\">\n                    <img\n                        alt=\"\"\n                        src={accountImage}\n                        loading=\"lazy\"\n                        className=\"social-card-modal__account-image\"\n                    />\n                </div>\n                <div id={titleId} className=\"social-card-modal__title\">\n                    <time\n                        dateTime={formatISO(createdDate, {\n                            representation: 'date',\n                        })}\n                        className=\"social-card__post-created\"\n                    >\n                        {formatDistance(createdDate, new Date(), {\n                            addSuffix: true,\n                        })}\n                    </time>\n                    <div className=\"social-card-modal__account-name\">\n                        {accountName}\n                    </div>\n                </div>\n                <button\n                    type=\"button\"\n                    onClick={handleModalClose}\n                    aria-label=\"close modal\"\n                    className=\"social-card-modal__close-icon\"\n                >\n                    <svg className=\"svg-icon\">\n                        <use href=\"#close\" />\n                    </svg>\n                </button>\n            </header>\n\n            <div className=\"social-card-modal__body\">\n                {text}\n                {bodyAdditionalContent}\n            </div>\n\n            <footer className=\"social-card-modal__footer\">\n                <a\n                    href={url}\n                    target=\"_blank\"\n                    className=\"social-card-modal__open-external-button\"\n                    rel=\"noreferrer\"\n                >\n                    View on {source}\n                </a>\n            </footer>\n        </Modal>\n    );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { useState } from 'react';\n\nimport { formatISO, formatDistance } from 'date-fns';\n\nimport uuidv4 from 'PlugAndPlay/_global/js/uuid';\nimport Modal from '../../../modal/jsx/modal';\nimport { useSocialCardModal } from './SocialCardCommon';\n\nconst SOCIAL_CARD_MAX_DESCRIPTION_LENGTH = 100;\n\nexport default function YoutubeSocialCard(args) {\n    const {\n        accountName,\n        accountImage,\n        createdDate,\n        source,\n        text,\n        url,\n        image,\n        lazyLoadImages,\n    } = args;\n\n    const [isExpanded, setIsExpanded] = useState(false);\n    const { openModalRef, modalOpenProps, isModalOpen, setIsModalOpen } =\n        useSocialCardModal();\n\n    let isTrimmed = false;\n    let bodyText = text;\n    if (bodyText.length > SOCIAL_CARD_MAX_DESCRIPTION_LENGTH && !isExpanded) {\n        isTrimmed = true;\n        bodyText = bodyText.slice(0, SOCIAL_CARD_MAX_DESCRIPTION_LENGTH);\n    }\n\n    const icon = 'external';\n\n    return (\n        <article className=\"social-card\">\n            <div\n                {...modalOpenProps}\n                role=\"button\"\n                tabIndex=\"0\"\n                aria-label=\"Open in modal\"\n                ref={openModalRef}\n                className=\"social-card__open-modal\"\n            >\n                <header className=\"social-card__header\">\n                    <div className=\"social-card__header-image\">\n                        <img\n                            alt=\"\"\n                            src={accountImage}\n                            loading={`${lazyLoadImages ? 'lazy' : ''}`}\n                            className=\"social-card__account-image\"\n                        />\n                    </div>\n                    <div className=\"social-card__title\">\n                        <time\n                            dateTime={formatISO(createdDate, {\n                                representation: 'date',\n                            })}\n                            className=\"social-card__post-created\"\n                        >\n                            {formatDistance(createdDate, new Date(), {\n                                addSuffix: true,\n                            })}\n                        </time>\n                        <div className=\"social-card__account-name\">\n                            {accountName}\n                        </div>\n                    </div>\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        aria-label={`View at ${source} (Opens in new window)`}\n                        rel=\"noopener noreferrer\"\n                        onClick={(event) => event.stopPropagation()}\n                        className={`social-card__view-external social-card__view-external--${icon}`}\n                    >\n                        <svg className=\"svg-icon\">\n                            <use href={`#${icon}`} />\n                        </svg>\n                    </a>\n                </header>\n                <div className=\"social-card__body\">\n                    {bodyText}\n                    {isTrimmed && (\n                        <>\n                            <span>...</span>\n                            <button\n                                type=\"button\"\n                                className=\"social-card__show-more\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    setIsExpanded(true);\n                                }}\n                            >\n                                show more\n                            </button>\n                        </>\n                    )}\n\n                    {image && (\n                        <img\n                            alt=\"\"\n                            src={image}\n                            loading={`${lazyLoadImages ? 'lazy' : ''}`}\n                            className=\"social-card__body-image\"\n                        />\n                    )}\n                </div>\n            </div>\n            {isModalOpen && (\n                <YoutubeSocialCardModal\n                    {...args}\n                    handleEventModalClose={() => {\n                        setIsModalOpen(false);\n                    }}\n                />\n            )}\n        </article>\n    );\n}\n\nfunction YoutubeSocialCardModal({\n    accountName,\n    accountImage,\n    createdDate,\n    source,\n    text,\n    url,\n    video,\n    handleEventModalClose,\n}) {\n    const titleId = uuidv4(); // Modal needs a id for the dialog described by\n    return (\n        <Modal\n            titleId={titleId}\n            onClose={handleEventModalClose}\n            className=\"social-card-modal\"\n        >\n            <header className=\"social-card-modal__header\">\n                <div className=\"social-card-modal__header-image\">\n                    <img\n                        alt=\"\"\n                        src={accountImage}\n                        loading=\"lazy\"\n                        className=\"social-card-modal__account-image\"\n                    />\n                </div>\n                <div id={titleId} className=\"social-card-modal__title\">\n                    <time\n                        dateTime={formatISO(createdDate, {\n                            representation: 'date',\n                        })}\n                        className=\"social-card__post-created\"\n                    >\n                        {formatDistance(createdDate, new Date(), {\n                            addSuffix: true,\n                        })}\n                    </time>\n                    <div className=\"social-card-modal__account-name\">\n                        {accountName}\n                    </div>\n                </div>\n                <button\n                    type=\"button\"\n                    onClick={handleEventModalClose}\n                    aria-label=\"close modal\"\n                    className=\"social-card-modal__close-icon\"\n                >\n                    <svg className=\"svg-icon\">\n                        <use href=\"#close\" />\n                    </svg>\n                </button>\n            </header>\n\n            <div className=\"social-card-modal__body\">\n                {text}\n                <div className=\"social-card-modal__video-embed-wrapper\">\n                    <iframe\n                        width=\"853\"\n                        height=\"480\"\n                        src={video}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"Embedded youtube\"\n                        className=\"social-card-modal__video-embed\"\n                    />\n                </div>\n            </div>\n\n            <footer className=\"social-card-modal__footer\">\n                <a\n                    href={url}\n                    target=\"_blank\"\n                    className=\"social-card-modal__open-external-button\"\n                    rel=\"noreferrer\"\n                >\n                    View on {source}\n                </a>\n            </footer>\n        </Modal>\n    );\n}\n","/* eslint-disable import/prefer-default-export */\nimport { useRef, useState } from 'react';\nimport { useKeyboard } from '@react-aria/interactions';\n\n/**\n * @returns Hooks to open and close the modal dialog from interacting with the social card\n */\nexport function useSocialCardModal() {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const openModalRef = useRef();\n\n    const { keyboardProps: modalOpenProps } = useKeyboard({\n        onKeyUp: (e) => {\n            // Check the target isnt another element inside the modal\n            if (e.target === openModalRef.current) {\n                // Enter\n                if (e.keyCode === 13) {\n                    setIsModalOpen(true);\n                }\n\n                // Space\n                if (e.keyCode === 32) {\n                    setIsModalOpen(true);\n                }\n            }\n        },\n    });\n    modalOpenProps.onClick = () => setIsModalOpen(true);\n\n    return {\n        openModalRef, // useRef\n        modalOpenProps, // useKeyboard\n        isModalOpen, // useState get\n        setIsModalOpen, // useState set\n    };\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { useEffect, useContext } from 'react';\nimport { OverlayProvider } from '@react-aria/overlays';\nimport { watchModals } from '@react-aria/aria-modal-polyfill';\n\nimport {\n    getCurrentScreenSizeInt,\n    screenSizeSM,\n} from 'PlugAndPlay/_global/js/screenSize';\n\n// Data layer imports\nimport SocialFeedContext from './data/SocialFeedContext';\n\nimport { createCard } from './card-types/CardFactory';\nimport '../css/_global.scss'; // Last so our CSS overrides any dependencies above\n\nexport default function SocialFeed({ title, numberOfCards }) {\n    const { feedData, getFeedData } = useContext(SocialFeedContext);\n\n    // If in mobile format lazy load all images\n    const screenSize = getCurrentScreenSizeInt();\n    const forceLazyLoadImage = screenSize <= screenSizeSM;\n\n    watchModals();\n\n    // Initial data load\n    useEffect(() => {\n        getFeedData({\n            maxItems: numberOfCards,\n        });\n    }, [getFeedData]);\n\n    return (\n        <div className=\"social-feed-wrapper\">\n            <OverlayProvider className=\"social-feed-wrapper__overlay\">\n                <div className=\"no-wysiwyg social-feed\">\n                    <div className=\"social-feed__header\">{title}</div>\n                    <div className=\"social-feed__body\">\n                        {feedData.map((cardDetails, i) => {\n                            return createCard({\n                                ...cardDetails,\n                                lazyLoadImages: forceLazyLoadImage || i > 1,\n                            });\n                        })}\n                    </div>\n                </div>\n            </OverlayProvider>\n        </div>\n    );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable import/prefer-default-export */\nimport React from 'react';\n\nimport BaseSocialCard from './BaseSocialCard';\nimport YoutubeSocialCard from './YoutubeSocialCard';\n\n/**\n * Create a card based on the details of the card pulled from the datasource\n *\n * @param {Object} args data object containing card information from the apps data source\n * @returns {Object} card object\n */\nexport function createCard(args) {\n    switch (args.source) {\n        case 'youtube': {\n            return (\n                <YoutubeSocialCard\n                    key={`${args.source} + ${args.createdDate.getTime()}`}\n                    {...args}\n                />\n            );\n        }\n\n        default:\n            return (\n                <BaseSocialCard\n                    key={`${args.source} + ${args.createdDate.getTime()}`}\n                    {...args}\n                />\n            );\n    }\n}\n","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}"],"names":["counterMap","WeakMap","uncontrolledNodes","markerMap","lockCount","hideOthers","originalTarget","parentNode","markerName","document","Array","isArray","ownerDocument","body","getDefaultParent","targets","markerCounter","hiddenNodes","elementsToKeep","Set","keep","el","has","add","forEach","deep","parent","indexOf","prototype","call","children","node","attr","getAttribute","alreadyHidden","counterValue","get","markerValue","set","push","setAttribute","clear","removeAttribute","delete","$7aa021f48f4356fd$var$currentDocument","undefined","$7aa021f48f4356fd$export$11dddb85aae73809","selector","undo","target","querySelector","modalContainers","observer","MutationObserver","mutationRecord","mutation","type","addedNodes","length","addNode","from","find","ref","modal","removedNodes","nodeIndexRemove","findIndex","container","includes","filter","val","i","observe","childList","disconnect","useButton","props","additionalProps","elementType","isDisabled","onPress","onPressStart","onPressEnd","onPressChange","preventFocusOnPress","onClick","deprecatedOnClick","href","rel","disabled","role","tabIndex","pressProps","isPressed","focusableProps","buttonProps","labelable","e","console","warn","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","Modal","titleId","title","onClose","className","contain","restoreFocus","autoFocus","ModalContent","settings","isDismissable","isOpen","modalRef","React","modalContentRef","focusManager","useFocusManager","overlayProps","underlayProps","useOverlay","usePreventScroll","modalProps","useModal","dialogProps","titleProps","useDialog","useEffect","current","focusFirst","hidden","useDivButtonModalOpen","isModalOpen","setIsModalOpen","useState","openModalRef","useRef","modalOpenProps","formatISO","date","options","requiredArgs","arguments","originalDate","toDate","isNaN","getTime","RangeError","format","String","representation","result","tzOffset","dateDelimiter","timeDelimiter","day","addLeadingZeros","getDate","month","getMonth","year","getFullYear","concat","offset","getTimezoneOffset","absoluteOffset","Math","abs","hourOffset","floor","minuteOffset","sign","hour","getHours","minute","getMinutes","second","getSeconds","separator","time","join","BaseSocialCard","args","accountName","accountImage","createdDate","source","text","url","image","lazyLoadImages","isExpanded","setIsExpanded","useDivModalOpen","icon","isTrimmed","bodyText","slice","alt","src","loading","dateTime","formatDistance","Date","addSuffix","stopPropagation","event","BaseSocialCardModal","handleModalClose","bodyAdditionalContent","video","videoCaptions","kind","id","YoutubeSocialCard","keyboardProps","useKeyboard","onKeyUp","keyCode","useSocialCardModal","YoutubeSocialCardModal","handleEventModalClose","width","height","frameBorder","allow","allowFullScreen","SocialFeed","numberOfCards","feedData","getFeedData","useContext","SocialFeedContext","forceLazyLoadImage","getCurrentScreenSizeInt","screenSizeSM","watchModals","maxItems","map","cardDetails","key","number","targetLength","output"],"sourceRoot":""}